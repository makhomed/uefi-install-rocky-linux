
# inst.ks=https://example.com/linux-server-name-kickstart.cfg inst.xtimeout=7200 inst.nosave=all inst.selinux=0 selinux=0 transparent_hugepage=never

# download https://download.rockylinux.org/pub/rocky/9/isos/x86_64/Rocky-9.5-x86_64-boot.iso

# mount Rocky-9.5-x86_64-boot.iso as CD-ROM from remove server, boot from it.

# at welcome screen press <Tab> and add to the command line, using "Send clipboard to host" iDRAC/KVM function:

# inst.ks=https://example.com/linux-server-name-kickstart.cfg inst.xtimeout=7200 inst.nosave=all inst.selinux=0 selinux=0 transparent_hugepage=never

#
# kickstart for Rocky Linux 9.5 on bare metal server
#

#
# https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/9/html-single/interactively_installing_rhel_from_installation_media/index#recommended-partitioning-scheme_manual-partitioning
#
# /boot/efi partition - recommended size of 200 MiB
#
# /boot partition - recommended size at least 1 GiB
#
# root partition - recommended size at least 10 GiB
#
# swap partition - recommended size at least 1 GiB

%pre --interpreter=/usr/bin/bash

#!/bin/bash

DISK_1=/dev/disk/by-id/ata-INTEL_SSDSC2KB960G8_PHYF82AAAAAA960CGN
DISK_2=/dev/disk/by-id/ata-INTEL_SSDSC2KB960G8_PHYF82BBBBBB960CGN

function mdraid_metadata_size_in_MiB {
    # if 1MiB partition metadata == 0 MiB
    # because no mdraid used for biosboot
    if (( $1 == 1 )) ; then
        echo 0
    elif (( $1 < 1024 )) ; then
        echo 1
    elif (( $1 < 2048 )) ; then
        echo 2
    elif (( $1 < 4096 )) ; then
        echo 3
    elif (( $1 < 8192 )) ; then
        echo 5
    elif (( $1 < 16384 )) ; then
        echo 9
    elif (( $1 < 32768 )) ; then
        echo 17
    elif (( $1 < 65536 )) ; then
        echo 33
    elif (( $1 < 131072 )) ; then
        echo 65
    else
        echo 129
    fi
}

function lvm_metadata_size_in_MiB {
    # TODO lvm metadata may be more then 1 MiB
    # need to fix
    echo 1
}

if [[ -d /sys/firmware/efi ]] ; then

# EFI System Partition
PART_1_SIZE=200

cat << EOF > /tmp/include-bootloader-partition-kickstart.cfg

part raid.11 --onpart=${DISK_1}-part1
part raid.12 --onpart=${DISK_2}-part1
raid /boot/efi --level=1 --device=boot-efi --label=boot-efi --fstype=efi --fsoptions="defaults,discard,noatime,fmask=0177,dmask=0077,shortname=winnt" raid.11 raid.12

EOF

else

# BIOS Boot Partition
PART_1_SIZE=1

cat << EOF > /tmp/include-bootloader-partition-kickstart.cfg

part biosboot.11 --fstype=biosboot --onpart=${DISK_1}-part1
part biosboot.12 --fstype=biosboot --onpart=${DISK_2}-part1

EOF

fi

# boot partition
PART_2_SIZE=1024

# root partition
# swap partition
LVM_ROOT_SIZE=$(( 16 * 1024 ))
LVM_SWAP_SIZE=$(( 16 * 1024 ))
PART_3_LVM_DATA=$(( $LVM_ROOT_SIZE + $LVM_SWAP_SIZE ))
PART_3_LVM_META=$( lvm_metadata_size_in_MiB $PART_3_LVM_DATA )
PART_3_SIZE=$(( $PART_3_LVM_DATA + $PART_3_LVM_META ))

PART_1_START=1
PART_1_META=$( mdraid_metadata_size_in_MiB $PART_1_SIZE )
PART_1_END=$(( $PART_1_START + $PART_1_SIZE + $PART_1_META ))

PART_2_START=$PART_1_END
PART_2_META=$( mdraid_metadata_size_in_MiB $PART_2_SIZE )
PART_2_END=$(( $PART_2_START + $PART_2_SIZE + $PART_2_META ))

PART_3_START=$PART_2_END
PART_3_META=$( mdraid_metadata_size_in_MiB $PART_3_SIZE )
PART_3_END=$(( $PART_3_START + $PART_3_SIZE + $PART_3_META ))

wipefs --all --force ${DISK_1}
wipefs --all --force ${DISK_2}

parted --script ${DISK_1} mklabel gpt
parted --script ${DISK_2} mklabel gpt

parted --script ${DISK_1} mkpart '""' ${PART_1_START}MiB ${PART_1_END}MiB
parted --script ${DISK_2} mkpart '""' ${PART_1_START}MiB ${PART_1_END}MiB

parted --script ${DISK_1} mkpart '""' ${PART_2_START}MiB ${PART_2_END}MiB
parted --script ${DISK_2} mkpart '""' ${PART_2_START}MiB ${PART_2_END}MiB

parted --script ${DISK_1} mkpart '""' ${PART_3_START}MiB ${PART_3_END}MiB
parted --script ${DISK_2} mkpart '""' ${PART_3_START}MiB ${PART_3_END}MiB

%end

rootpw --plaintext password

graphical
lang en_US.UTF-8
keyboard us
timezone UTC --utc
eula --agreed
selinux --disabled
firewall --disabled
firstboot --disabled

url --url=https://download.rockylinux.org/pub/rocky/9/BaseOS/x86_64/os/

repo --name=crb --mirrorlist=https://mirrors.rockylinux.org/mirrorlist?arch=x86_64&repo=CRB-9
repo --name=epel --metalink=https://mirrors.fedoraproject.org/metalink?repo=epel-9&arch=x86_64&infra=genclo&content=pub/rocky

network --hostname=linux-server-name.example.net

ignoredisk --only-use=/dev/disk/by-id/ata-INTEL_SSDSC2KB960G8_PHYF82AAAAAA960CGN,/dev/disk/by-id/ata-INTEL_SSDSC2KB960G8_PHYF82BBBBBB960CGN
bootloader --location=mbr --timeout=1

%include /tmp/include-bootloader-partition-kickstart.cfg

part raid.21 --onpart=/dev/disk/by-id/ata-INTEL_SSDSC2KB960G8_PHYF82AAAAAA960CGN-part2
part raid.22 --onpart=/dev/disk/by-id/ata-INTEL_SSDSC2KB960G8_PHYF82BBBBBB960CGN-part2
raid /boot --label=boot --fstype=xfs --fsoptions="defaults,discard,noatime" --level=1 --device=boot raid.21 raid.22

part raid.31 --onpart=/dev/disk/by-id/ata-INTEL_SSDSC2KB960G8_PHYF82AAAAAA960CGN-part3
part raid.32 --onpart=/dev/disk/by-id/ata-INTEL_SSDSC2KB960G8_PHYF82BBBBBB960CGN-part3

raid pv.41 --level=1 --device=pv raid.31 raid.32
volgroup rocky pv.41
logvol /     --vgname=rocky --name=root --label=root --fstype=xfs --fsoptions="defaults,discard,noatime" --size=16384
logvol swap  --vgname=rocky --name=swap --label=swap --fstype=swap --grow --fsoptions="defaults,discard" --size=16384


reboot

%onerror --interpreter=/usr/bin/bash
sleep 999999
%end

%packages --inst-langs=en_US.UTF-8
-NetworkManager*
-c-ares
-firewalld
-fprintd-pam
-intltool
-kexec-tools
-plymouth*
-sssd-common
-sssd-kcm
atop
bash-completion
bind-utils
binutils
bmon
bzip2
chrony
cronie
diffutils
epel-release
git
glibc-all-langpacks
grub2-efi-x64
grub2-tools
grubby
htop
iotop
iotop-c
jq
langpacks-en
lshw
lsof
ltrace
lvm2
man-pages
mc
mdadm
microcode_ctl
mtr
ncdu
net-tools
nftables
nmap
openssh-clients
postfix
pv
pwgen
python-unversioned-command
python3
python3-pip
rsync
s-nail
screen
shim-x64
smartmontools
strace
sudo
systemd-networkd
tar
tcpdump
traceroute
tuned
unzip
vim
wget
whois
zip
%end

%addon com_redhat_kdump --disable
%end

%post --interpreter=/usr/bin/bash --erroronfail --log=/usr/local/etc/README

. /etc/os-release

echo
echo Rocky Linux $VERSION_ID installed $(date --utc +'%d %b %Y')
echo

mkdir -p /etc/systemd/network
cat << 'EOF' > /etc/systemd/network/00-name-eth0.link
[Match]
MACAddress=11:22:33:44:55:66

[Link]
Name=eth0
EOF
cat << 'EOF' > /etc/systemd/network/00-name-eth1.link
[Match]
MACAddress=11:22:33:44:55:67

[Link]
Name=eth1
EOF
cat << 'EOF' > /etc/systemd/network/eth0.network
[Match]
MACAddress=11:22:33:44:55:66

[Link]
ActivationPolicy=always-up

[Network]
IPv6AcceptRA=false
LinkLocalAddressing=no
Address=11.22.33.44/24
Gateway=11.22.33.1
EOF
cat << 'EOF' > /etc/systemd/network/eth1.network
[Match]
MACAddress=11:22:33:44:55:67

[Link]
ActivationPolicy=always-down

[Network]
IPv6AcceptRA=false
LinkLocalAddressing=no
EOF
cat << 'EOF' > /etc/resolv.conf
nameserver 1.1.1.1
nameserver 1.0.0.1
nameserver 8.8.8.8
EOF

cat << 'EOF' > /etc/sysconfig/nftables.conf
#!/usr/sbin/nft -f

flush ruleset

table inet filter {

    chain input {
        type filter hook input priority 0; policy drop;
        ct state established,related accept
        ip6 nexthdr icmpv6 accept
        ip protocol icmp accept
        iif lo accept
        tcp dport 22 accept
    }

    chain output {
        type filter hook output priority 0; policy accept;
    }

    chain forward {
        type filter hook forward priority 0; policy accept;
    }
}
EOF
chmod 0711 /etc/sysconfig/nftables.conf

mkdir -p -m0700 /root/.ssh
cat << 'EOF' > /root/.ssh/authorized_keys

ssh-ed25519 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA key A description

ssh-ed25519 BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB key B description

ssh-ed25519 CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC key C description

EOF
chmod 0600 /root/.ssh/authorized_keys


cat << 'EOF' > /etc/cron.d/fstrim

55 * * * * root (cat /etc/cron.d/fstrim ; time fstrim -a ; echo ) 2>&1 | expand | logger -p cron.info
EOF



cat << 'EOF' > /usr/share/mc/mc.ini
[Midnight-Commander]
use_internal_edit=false
EOF



cat << 'EOF' > /etc/htoprc
# Beware! This file is rewritten by htop when settings are changed in the interface.
# The parser is also very primitive, and not human-friendly.
htop_version=3.2.2
config_reader_min_version=3
fields=0 48 17 18 50 38 39 40 2 46 47 49 1
hide_kernel_threads=1
hide_userland_threads=1
hide_running_in_container=0
shadow_other_users=0
show_thread_names=0
show_program_path=1
highlight_base_name=0
highlight_deleted_exe=1
shadow_distribution_path_prefix=0
highlight_megabytes=1
highlight_threads=1
highlight_changes=0
highlight_changes_delay_secs=5
find_comm_in_cmdline=1
strip_exe_from_cmdline=1
show_merged_command=0
header_margin=1
screen_tabs=1
detailed_cpu_time=1
cpu_count_from_one=1
show_cpu_usage=1
show_cpu_frequency=0
show_cpu_temperature=0
degree_fahrenheit=0
update_process_names=0
account_guest_in_cpu_meter=0
color_scheme=0
enable_mouse=1
delay=15
hide_function_bar=0
header_layout=two_50_50
column_meters_0=LeftCPUs4 Memory Swap DiskIO NetworkIO
column_meter_modes_0=1 1 1 2 2
column_meters_1=RightCPUs4 Systemd Tasks LoadAverage Uptime
column_meter_modes_1=1 2 2 2 2
tree_view=0
sort_key=46
tree_sort_key=0
sort_direction=-1
tree_sort_direction=1
tree_view_always_by_pid=0
all_branches_collapsed=0
screen:Main=PID USER PRIORITY NICE NLWP M_VIRT M_RESIDENT M_SHARE STATE PERCENT_CPU PERCENT_MEM TIME Command
.sort_key=PERCENT_CPU
.tree_sort_key=PID
.tree_view=0
.tree_view_always_by_pid=0
.sort_direction=-1
.tree_sort_direction=1
.all_branches_collapsed=0
screen:I/O=PID USER IO_PRIORITY IO_RATE IO_READ_RATE IO_WRITE_RATE Command
.sort_key=IO_RATE
.tree_sort_key=PID
.tree_view=0
.tree_view_always_by_pid=0
.sort_direction=-1
.tree_sort_direction=1
.all_branches_collapsed=0
EOF



cat << 'EOF' > /root/.vimrc
set nocompatible

syntax on
filetype on
filetype plugin on
filetype indent off

imap <F2> <esc>:w<cr>a
nmap <F2> :w<cr>

vmap <tab> >gv
vmap <s-tab> <gv
nmap <tab> I<tab><esc>
nmap <s-tab> ^i<bs><esc>

:nnoremap <F7> "=strftime("%a %b %d %Y")<CR>P
:inoremap <F7> <C-R>=strftime("%a %b %d %Y")<CR>

autocmd FileType perl set makeprg=perl\ -c\ %\ $*
autocmd FileType perl set errorformat=%f:%l:%m
autocmd FileType perl set autowrite
autocmd FileType make set noexpandtab

autocmd FileType python set tabstop=4
autocmd FileType python set shiftwidth=4
autocmd FileType python set smarttab
autocmd FileType python set expandtab
autocmd FileType python set softtabstop=4
autocmd FileType python set autoindent

autocmd FileType yaml set tabstop=2
autocmd FileType yaml set shiftwidth=2
autocmd FileType yaml set smarttab
autocmd FileType yaml set expandtab
autocmd FileType yaml set softtabstop=2
autocmd FileType yaml set autoindent

autocmd BufRead *.py set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class
autocmd BufWritePre *.py normal m`:%s/\s\+$//e ``
autocmd BufRead,BufNewFile /etc/php-fpm.conf set syntax=dosini
autocmd BufRead,BufNewFile /etc/php-fpm.d/*.conf set syntax=dosini
autocmd BufRead,BufNewFile /etc/systemd/network/*.network set syntax=dosini
autocmd BufRead,BufNewFile /etc/my.cnf set syntax=dosini
autocmd BufRead,BufNewFile *.rst setlocal spell spelllang=en
autocmd BufRead,BufNewFile /etc/containers/systemd/*.container set syntax=systemd

highlight clear
highlight Comment ctermfg=darkgrey ctermbg=black
highlight pythonComment ctermfg=darkgrey ctermbg=black

set tabstop=4
set shiftwidth=4
set expandtab

set ruler
set backspace=indent,eol,start

highlight ExtraWhitespace guibg=red ctermbg=red
autocmd Syntax * syn match ExtraWhitespace /\s\+$\| \+\ze\t/ containedin=ALL

highlight Tab guibg=blue ctermbg=blue
match Tab /\t/

set scrolloff=777

set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [ASCII=\%04.4b]\ [HEX=\%04.4B]\ [POS=%04l,%04v][%p%%]\ [LEN=%L]
set laststatus=2

nnoremap <F4> :set invpaste paste?<CR>
set pastetoggle=<F4>
set showmode

set foldmethod=marker
set foldcolumn=4

inoremap <F5> <C-O>za
nnoremap <F5> za
onoremap <F5> <C-C>za
vnoremap <F5> zf

autocmd FileType python compiler flake8

inoremap <unique> <F9> <esc>:w<cr>:cclose<cr>:make<cr>:cfirst<cr>:copen<cr>a
nnoremap <unique> <F9>      :w<cr>:cclose<cr>:make<cr>:cfirst<cr>:copen<cr>

function! ToggleQuickFix()
    if empty(filter(getwininfo(), 'v:val.quickfix'))
        copen
    else
        cclose
    endif
endfunction

inoremap <unique> <F10> <esc>:call ToggleQuickFix()<cr>a
nnoremap <unique> <F10> :call ToggleQuickFix()<cr>

inoremap <unique> <F11> <esc>:cprevious<cr>a
nnoremap <unique> <F11> :cprevious<cr>

inoremap <unique> <F12> <esc>:cnext<cr>a
nnoremap <unique> <F12> :cnext<cr>

inoremap <unique> <C-F11> <esc>:cfirst<cr>a
nnoremap <unique> <C-F11> :cfirst<cr>

inoremap <unique> <C-F12> <esc>:clast<cr>a
nnoremap <unique> <C-F12> :clast<cr>

colorscheme ron
EOF



cat << 'EOF' > /etc/profile.d/profile-setup-bash-readline.sh
#!/bin/bash

[ -z "$BASH_VERSION" ] && return

bind '"\e[A": history-search-backward' >/dev/null 2>&1

bind '"\e[B": history-search-forward'  >/dev/null 2>&1

EOF


cat << 'EOF' > /etc/profile.d/profile-setup-bash-vim-default-editor.sh
#!/bin/bash

[ -z "$BASH_VERSION" ] && return

VISUAL=/usr/bin/vim
export VISUAL

EDITOR=/usr/bin/vim
export EDITOR

EOF


cat << 'EOF' > /etc/profile.d/profile-setup-bash-xdg-runtime-dir.sh
#!/bin/bash

[ -z "$BASH_VERSION" ] && return

XDG_RUNTIME_DIR=/run/user/$(id -u)

export XDG_RUNTIME_DIR

EOF


cat << 'EOF' > /etc/profile.d/profile-setup-bash-aliases.sh
#!/bin/bash

[ -z "$BASH_VERSION" ] && return

export LESS=FRSXMK

alias dmesg='/usr/bin/dmesg --human'

alias journalctl='/usr/bin/journalctl --no-tail --pager-end'

alias iotop='/usr/sbin/iotop-c --only --processes'

alias jless='/usr/bin/python3 -m json.tool | /usr/bin/vim -M -N -R -c "set filetype=json | map q :q!<CR>" -'

alias jless2='/usr/bin/python3 -m json.tool | /usr/bin/less "$@"'

alias tailf='/usr/bin/tail --follow=name --retry'

c () {
    /usr/bin/python3 -c "from math import *; print( $* )"
}

с () {
    /usr/bin/python3 -c "from math import *; print( $* )"
}

EOF


cat << 'EOF' > /etc/profile.d/profile-setup-bash-prompt.sh
#!/bin/bash

[ -z "$BASH_VERSION" ] && return

DEFAULT_DNS_DOMAIN_NAME_SUFFIX=.example.net

ps1_git_branch()
{
    export PS1_GIT_BRANCH=$(git branch --show-current 2>/dev/null | sed 's/\(.*\)/(\1)/')
}

export PROMPT_COMMAND='ps1_git_branch'

if [[ $(cat /proc/sys/kernel/hostname) == *"${DEFAULT_DNS_DOMAIN_NAME_SUFFIX}" ]]
then
    export PS1='[\u@\h \w]$PS1_GIT_BRANCH\$ '
else
    export PS1='[\u@\H \w]$PS1_GIT_BRANCH\$ '
fi

EOF


cat << 'EOF' > /etc/profile.d/profile-setup-bash-percona.sh
#!/bin/bash

[ -z "$BASH_VERSION" ] && return
[ "$EUID" -ne 0 ] && return

# disable percona-telemetry-agent
# https://github.com/percona/telemetry-agent

PERCONA_TELEMETRY_DISABLE=1
export PERCONA_TELEMETRY_DISABLE

STDOUT=$(systemctl list-unit-files percona-telemetry-agent.service --plain --no-legend)
if [[ $STDOUT == *"percona-telemetry-agent.service"* ]] ; then
    if [[ $STDOUT == *"enabled"* ]] ; then
        systemctl --quiet --now disable percona-telemetry-agent.service
    fi
fi

EOF


#
# tune system configuration
#

systemctl enable nftables.service >/dev/null 2>/dev/null
systemctl enable tmp.mount >/dev/null 2>/dev/null
systemctl enable smartd.service >/dev/null 2>/dev/null

systemctl mask selinux-autorelabel-mark.service >/dev/null 2>/dev/null
systemctl mask selinux-autorelabel.service >/dev/null 2>/dev/null
systemctl mask selinux-autorelabel.target >/dev/null 2>/dev/null

echo 'GRUB_DISABLE_OS_PROBER=true' >> /etc/default/grub
grub2-mkconfig --output=/boot/grub2/grub.cfg --update-bls-cmdline >/dev/null 2>/dev/null

dnf config-manager --set-enabled crb
chmod +x /etc/rc.d/rc.local

rm -f /etc/systemd/network/10-anaconda-ifname-eth0.link
rm -f /etc/systemd/network/10-anaconda-ifname-eth1.link
rm -f /etc/sysconfig/anaconda
rm -f /etc/sysconfig/network
rm -f /root/.cshrc
rm -f /root/.tcshrc
rm -rf /etc/NetworkManager

function sshd_config() { printf "\n${1} ${2}\n\n" > /etc/ssh/sshd_config.d/00-${1}.conf; }
sshd_config GSSAPIAuthentication no
sshd_config LogLevel INFO
sshd_config PasswordAuthentication no
sshd_config PermitEmptyPasswords no
sshd_config PermitRootLogin prohibit-password
sshd_config UseDNS no

function sysctl_config { printf "\n${1} = ${2}\n\n" > /etc/sysctl.d/${1}.conf; }
sysctl_config vm.swappiness 10

#
# print system configuration
#

function title () { echo; echo "#"; echo "# $@"; echo "#"; }
function run () { echo ; echo "# $@" ; echo ; $@; }
title system configuration
run timedatectl
run hostnamectl
run cat /etc/default/grub
run cat /proc/cmdline
run ip address
run ip route
run ip -6 route

echo

%end

